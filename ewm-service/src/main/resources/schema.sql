create table if not exists users
(
    id    bigint generated by default as identity
        primary key,
    email varchar(255) not null
        constraint uk_email_user
            unique,
    name  varchar(255)
);

create table if not exists categories
(
    id   bigint generated by default as identity
        primary key,
    name varchar(255) not null
        constraint uk_name_categories
            unique
);

create table if not exists events
(
    id                 bigint generated by default as identity
        primary key,
    annotation         varchar(2000),
    confirmed_requests bigint,
    created_on         timestamp,
    description        varchar(7000),
    event_date         timestamp,
    desc_location      varchar(255),
    lat                real,
    lon                real,
    paid               boolean,
    participant_limit  integer,
    published_on       timestamp,
    request_moderation boolean,
    state              integer,
    title              varchar(255),
    views              bigint,
    categories_id      bigint
        constraint fk_event_categories_id
            references categories,
    initiator_id       bigint
        constraint fk_event_user_id
            references users
);

create table if not exists requests
(
    id           bigint generated by default as identity
        primary key,
    created      timestamp,
    status       integer,
    event_id     bigint
        constraint fk_request_event_id
            references events,
    requester_id bigint
        constraint fk_requester_id
            references users
);

create table if not exists compilations
(
    id     bigint generated by default as identity
        primary key,
    pinned boolean,
    title  varchar(255)
);

create table if not exists compilations_events
(
    compilation_id bigint not null
        constraint fk_events_compilations_compilation_id references compilations (id) on delete cascade,
    events_id      bigint not null unique
        constraint fk_events_compilations_event_id references events (id) on delete cascade,
    constraint pk_events_compilations primary key (compilation_id, events_id)
);
CREATE INDEX IF NOT EXISTS fk_events_compilations_compilation_id ON compilations_events (compilation_id);
CREATE INDEX IF NOT EXISTS fk_events_compilations_event_id ON compilations_events (events_id);

alter table users
    owner to ewmroot;

alter table categories
    owner to ewmroot;

alter table events
    owner to ewmroot;

alter table requests
    owner to ewmroot;

alter table compilations
    owner to ewmroot;

alter table compilations_events
    owner to ewmroot;